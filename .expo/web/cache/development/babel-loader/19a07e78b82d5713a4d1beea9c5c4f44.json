{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Kotlin() {\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.Heading,\n          children: \" Kotlin \"\n        }), _jsx(Image, {\n          style: styles.img,\n          source: {\n            uri: 'https://ih1.redbubble.net/image.1060767194.0684/pp,840x830-pad,1000x1000,f8f8f8.jpg',\n            width: 200,\n            height: 200\n          }\n        }), _jsx(Text, {\n          style: styles.text1,\n          children: \" Kotlin is a cross-platform, statically typed, general-purpose programming language with type inference. Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library, but type inference allows its syntax to be more concise. \"\n        }), _jsx(Text, {\n          style: styles.text1,\n          children: \"  Google announced that the Kotlin programming language is now its preferred language for Android app developers. Since the release of Android Studio 3.0 in October 2017, Kotlin has been included as an alternative to the standard Java compiler. The Android Kotlin compiler produces Java 8 bytecode by default which runs in any later JVM, but lets the programmer choose to target Java 9 up to 18, for optimization, or allows for more features; has bidirectional record class interoperability support for JVM, introduced in Java 16, considered stable as of Kotlin 1.5. \"\n        })]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightblue'\n  },\n  Heading: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'blue',\n    textAlign: 'center'\n  },\n  img: {\n    marginTop: 40,\n    margin: 20\n  },\n  text1: {\n    fontSize: 20,\n    textAlign: 'justify',\n    padding: 20,\n    paddingTop: 30\n  }\n});","map":{"version":3,"names":["React","Kotlin","styles","container","Heading","img","uri","width","height","text1","StyleSheet","create","flex","backgroundColor","fontSize","fontWeight","color","textAlign","marginTop","margin","padding","paddingTop"],"sources":["C:/Users/Acer/Desktop/Semester 2 (1st Year)/EEI3269/Design Class/DR 04/Learn_Coding_App/screens/kotlin.js"],"sourcesContent":["import * as React from 'react';\r\nimport {StyleSheet, Text, View, SafeAreaView, ScrollView, Image} from 'react-native';\r\n\r\nexport default function Kotlin() {\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n    <View style={styles.container}>\r\n    <Text style={styles.Heading}> Kotlin </Text>\r\n    <Image style={styles.img}\r\n            source={{\r\n              uri: 'https://ih1.redbubble.net/image.1060767194.0684/pp,840x830-pad,1000x1000,f8f8f8.jpg',\r\n              width: 200,\r\n              height: 200,\r\n            }}\r\n          />\r\n    <Text style={styles.text1}> Kotlin is a cross-platform, statically typed, general-purpose programming language with type inference. \r\n    Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library, \r\n    but type inference allows its syntax to be more concise. </Text>\r\n    <Text style={styles.text1}>  Google announced that the Kotlin programming language is now its preferred language for Android app developers.\r\n     Since the release of Android Studio 3.0 in October 2017, Kotlin has been included as an alternative to the standard Java compiler. The Android \r\n     Kotlin compiler produces Java 8 bytecode by default which runs in any later JVM, but lets the programmer choose to target Java 9 up to 18, \r\n     for optimization, or allows for more features; has bidirectional record class interoperability support for JVM, introduced in Java 16, \r\n     considered stable as of Kotlin 1.5. </Text>\r\n    \r\n    </View>\r\n    </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n      flex:1,\r\n      backgroundColor:'lightblue',\r\n      \r\n    },\r\n    Heading:{\r\n      fontSize:50,\r\n      fontWeight:'bold',\r\n      color:'white',\r\n      backgroundColor:'blue',\r\n      textAlign:'center',\r\n    },\r\n    img: {\r\n      marginTop: 40,\r\n      margin:20,\r\n    },\r\n    text1: {\r\n      fontSize: 20,\r\n      textAlign: 'justify',\r\n      padding: 20,\r\n      paddingTop: 30,\r\n    },\r\n  });"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;AAGA,eAAe,SAASC,MAAT,GAAkB;EAC/B,OACE,KAAC,YAAD;IAAA,UACE,KAAC,UAAD;MAAA,UACF,MAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;QAAA,WACA,KAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACE,OAApB;UAAA;QAAA,EADA,EAEA,KAAC,KAAD;UAAO,KAAK,EAAEF,MAAM,CAACG,GAArB;UACQ,MAAM,EAAE;YACNC,GAAG,EAAE,qFADC;YAENC,KAAK,EAAE,GAFD;YAGNC,MAAM,EAAE;UAHF;QADhB,EAFA,EASA,KAAC,IAAD;UAAM,KAAK,EAAEN,MAAM,CAACO,KAApB;UAAA;QAAA,EATA,EAYA,KAAC,IAAD;UAAM,KAAK,EAAEP,MAAM,CAACO,KAApB;UAAA;QAAA,EAZA;MAAA;IADE;EADF,EADF;AAyBD;AAAA;AACD,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC7BR,SAAS,EAAC;IACRS,IAAI,EAAC,CADG;IAERC,eAAe,EAAC;EAFR,CADmB;EAM7BT,OAAO,EAAC;IACNU,QAAQ,EAAC,EADH;IAENC,UAAU,EAAC,MAFL;IAGNC,KAAK,EAAC,OAHA;IAINH,eAAe,EAAC,MAJV;IAKNI,SAAS,EAAC;EALJ,CANqB;EAa7BZ,GAAG,EAAE;IACHa,SAAS,EAAE,EADR;IAEHC,MAAM,EAAC;EAFJ,CAbwB;EAiB7BV,KAAK,EAAE;IACLK,QAAQ,EAAE,EADL;IAELG,SAAS,EAAE,SAFN;IAGLG,OAAO,EAAE,EAHJ;IAILC,UAAU,EAAE;EAJP;AAjBsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}